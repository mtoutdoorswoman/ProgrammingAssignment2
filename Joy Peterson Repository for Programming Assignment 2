## makeCacheMatrix is the variable name for the function that allows you to create a matrix.  

## the get, setInverse, and getInverse functions are childern functions to the parent makeCacheMatrix.  These commands are preparing the matrix to be able to have the inverse function applied to the matrix.

makeCacheMatrix <- function(x = matrix()) {
 inv<-NULL
  set<-function(y){
    x<<-y
    inv<<-NULL
  }
  get<-function(){x}
  setInverse<-function(inverse){inv<<-inverse}
  getInverse<-function(){inv}
  list(set=set,get=get,setInverse=setInverse,getInverse=getInverse)
}


## cacheSolve statement applies the agruments created in the makeCacheMatrix allowing it to eventually have the inverse agrument applied to the matrix.

cacheSolve <- function(x, ...) {
       inv<-x$getInverse()
  if(!is.null(inv)){
    message("getting cached data")
    return(inv)
  }
  mat<-x$get()
  inv<-solve(mat,...)
  x$setInverse(inv)
  inv   ## Return a matrix that is the inverse of 'x'
}
